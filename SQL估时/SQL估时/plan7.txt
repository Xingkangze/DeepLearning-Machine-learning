------------------------------ 
QUERY PLAN DESCRIPTION: 
------------------------------

explain select FreqTransform( count(distinct case when d_pg like '%1103480%' then rmid else null end), count(distinct case when d_pg like '%1103802%' then rmid else null end), count(distinct case when d_pg like '%1103500%' then rmid else null end), count(distinct case when d_pg like '%1103563%' then rmid else null end), count(distinct case when d_pg like '%1104064%' then rmid else null end), count(distinct case when d_pg like '%1103805%' then rmid else null end), count(distinct case when d_pg like '%1103404%' then rmid else null end), count(distinct case when d_pg like '%1103507%' then rmid else null end), count(distinct case when d_pg like '%1103520%' then rmid else null end), count(distinct case when d_pg like '%1103483%' then rmid else null end), count(distinct case when d_pg like '%1104065%' then rmid else null end), count(distinct case when d_pg like '%1103762%' then rmid else null end), count(distinct case when d_pg like '%1103484%' then rmid else null end), count(distinct case when d_pg like '%1103101%' then rmid else null end), count(distinct case when d_pg like '%1103516%' then rmid else null end), count(distinct case when d_pg like '%1103977%' then rmid else null end), count(distinct case when d_pg like '%1104093%' then rmid else null end) using parameters colgroup='1103480,1103802,1103500,1103563,1104064,1103805,1103404,1103507,1103520,1103483,1104065,1103762,1103484,1103101,1103516,1103977,1104093') over(partition by campaign_id) as (campaign_id,tag_id,uv) from (select d_pg , campaign_id , hash(rmid) as rmid from v_log_push where pure_date>=20181201 and pure_date<=20181216 and campaign_id in (206910,206911,206912,206913,206914,206915,206916,206917,206918,206919,206920,206921,206922,206934,206935,206936,206937,206938,206939,206940,206941,206942,206943,206944,206945,206946,206947,206948,206949,206950,206951,206952,206953,206954,206955,206956,206957,206958,206959,206960,206961,206962,206963,206964,206965,206966,206967,206968,206969,206970,206971,206972,206973,206974,206975,206976,206977,206927,206928,206982,206990,206984,206978,206989,206979,206987,206986,206983,206988,206985,206980,206981,206995,207003,206997,206991,207002,206992,207000,206999,206996,207001,206998,206993,206994,207008,207016,207010,207004,207015,207005,207013,207012,207009,207014,207011,207006,207007,207020,207021,207032,207033) and ((d_pg like '%1103480%' ) or (d_pg like '%1103802%' ) or (d_pg like '%1103500%' ) or (d_pg like '%1103563%' ) or (d_pg like '%1104064%' ) or (d_pg like '%1103805%' ) or (d_pg like '%1103404%' ) or (d_pg like '%1103507%' ) or (d_pg like '%1103520%' ) or (d_pg like '%1103483%' ) or (d_pg like '%1104065%' ) or (d_pg like '%1103762%' ) or (d_pg like '%1103484%' ) or (d_pg like '%1103101%' ) or (d_pg like '%1103516%' ) or (d_pg like '%1103977%' ) or (d_pg like '%1104093%' ) ) and p=1 order by 2,3,1) a group by campaign_id

Access Path:
+-ANALYTICAL [Cost: 2B, Rows: 1] (PATH ID: 1)
|  Analytic Group
|   Functions: FreqTransform()
|  Execute on: All Nodes
| +---> GROUPBY HASH (SORT OUTPUT) (GLOBAL RESEGMENT GROUPS) (LOCAL RESEGMENT GROUPS) [Cost: 2B, Rows: 1] (PATH ID: 2)
| |      Aggregates: count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>), count(DISTINCT <SVAR>)
| |      Group By: a.campaign_id
| |      Execute on: All Nodes
| | +---> GROUPBY HASH (GLOBAL RESEGMENT GROUPS) (LOCAL RESEGMENT GROUPS) [Cost: 2B, Rows: 1] (PATH ID: 3)
| | |      Group By: a.campaign_id, CASE WHEN (a.d_pg ~~ '%1103480%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103802%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103500%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103563%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1104064%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103805%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103404%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103507%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103520%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103483%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1104065%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103762%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103484%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103101%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103516%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1103977%') THEN a.rmid ELSE NULL::int END, CASE WHEN (a.d_pg ~~ '%1104093%') THEN a.rmid ELSE NULL::int END
| | |      Grouping Sets: (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>), (a.campaign_id, <SVAR>)
| | |      Execute on: All Nodes
| | |      Execute on: All Nodes
| | | +---> SORT [Cost: 2B, Rows: 9B] (PATH ID: 5)
| | | |      Order: log_push.campaign_id ASC, hash(log_push.rmid) ASC, CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ASC
| | | |      Execute on: All Nodes
| | | | +---> STORAGE ACCESS for log_push [Cost: 710M, Rows: 9B] (PATH ID: 6)
| | | | |      Projection: public.log_push_super_20180815_b0
| | | | |      Materialize: log_push.dmp_tag, log_push.campaign_id, log_push.rmid
| | | | |      Filter: (log_push.campaign_id = ANY (ARRAY[206910, 206911, 206912, 206913, 206914, 206915, 206916, 206917, 206918, 206919, 206920, 206921, 206922, 206934, 206935, 206936, 206937, 206938, 206939, 206940, 206941, 206942, 206943, 206944, 206945, 206946, 206947, 206948, 206949, 206950, 206951, 206952, 206953, 206954, 206955, 206956, 206957, 206958, 206959, 206960, 206961, 206962, 206963, 206964, 206965, 206966, 206967, 206968, 206969, 206970, 206971, 206972, 206973, 206974, 206975, 206976, 206977, 206927, 206928, 206982, 206990, 206984, 206978, 206989, 206979, 206987, 206986, 206983, 206988, 206985, 206980, 206981, 206995, 207003, 206997, 206991, 207002, 206992, 207000, 206999, 206996, 207001, 206998, 206993, 206994, 207008, 207016, 207010, 207004, 207015, 207005, 207013, 207012, 207009, 207014, 207011, 207006, 207007, 207020, 207021, 207032, 207033]))
| | | | |      Filter: (log_push.valid = true)
| | | | |      Filter: ((log_push.pure_date >= 20181201) AND (log_push.pure_date <= 20181216))
| | | | |      Filter: (log_push.p = 1)
| | | | |      Filter: ((CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103480%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103802%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103500%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103563%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1104064%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103805%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103404%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103507%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103520%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103483%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1104065%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103762%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103484%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103101%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103516%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1103977%') OR (CASE WHEN (regexp_count(log_push.dmp_tag, '("d_pg")', 1, '') > 0) THEN coalesce((regexp_substr(log_push.dmp_tag, '"d_pg":"?([^"}]*)', 1, 1, '', 1))::varchar(256), '') ELSE NULL END ~~ '%1104093%'))
| | | | |      Execute on: All Nodes


------------------------------ 
----------------------------------------------- 
PLAN: BASE QUERY PLAN (GraphViz Format)
----------------------------------------------- 
digraph G {
graph [rankdir=BT, label = "BASE QUERY PLAN\nQuery: explain select FreqTransform( count(distinct case when d_pg like \'%1103480%\' then rmid else null end), count(distinct case when d_pg like \'%1103802%\' then rmid else null end), count(distinct case when d_pg like \'%1103500%\' then rmid else null end), count(distinct case when d_pg like \'%1103563%\' then rmid else null end), count(distinct case when d_pg like \'%1104064%\' then rmid else null end), count(distinct case when d_pg like \'%1103805%\' then rmid else null end), count(distinct case when d_pg like \'%1103404%\' then rmid else null end), count(distinct case when d_pg like \'%1103507%\' then rmid else null end), count(distinct case when d_pg like \'%1103520%\' then rmid else null end), count(distinct case when d_pg like \'%1103483%\' then rmid else null end), count(distinct case when d_pg like \'%1104065%\' then rmid else null end), count(distinct case when d_pg like \'%1103762%\' then rmid else null end), count(distinct case when d_pg like \'%1103484%\' then rmid else null end), count(distinct case when d_pg like \'%1103101%\' then rmid else null end), count(distinct case when d_pg like \'%1103516%\' then rmid else null end), count(distinct case when d_pg like \'%1103977%\' then rmid else null end), count(distinct case when d_pg like \'%1104093%\' then rmid else null end) using parameters colgroup=\'1103480,1103802,1103500,1103563,1104064,1103805,1103404,1103507,1103520,1103483,1104065,1103762,1103484,1103101,1103516,1103977,1104093\') over(partition by campaign_id) as (campaign_id,tag_id,uv) from (select d_pg , campaign_id , hash(rmid) as rmid from v_log_push where pure_date\>=20181201 and pure_date\<=20181216 and campaign_id in (206910,206911,206912,206913,206914,206915,206916,206917,206918,206919,206920,206921,206922,206934,206935,206936,206937,206938,206939,206940,206941,206942,206943,206944,206945,206946,206947,206948,206949,206950,206951,206952,206953,206954,206955,206956,206957,206958,206959,206960,206961,206962,206963,206964,206965,206966,206967,206968,206969,206970,206971,206972,206973,206974,206975,206976,206977,206927,206928,206982,206990,206984,206978,206989,206979,206987,206986,206983,206988,206985,206980,206981,206995,207003,206997,206991,207002,206992,207000,206999,206996,207001,206998,206993,206994,207008,207016,207010,207004,207015,207005,207013,207012,207009,207014,207011,207006,207007,207020,207021,207032,207033) and ((d_pg like \'%1103480%\' ) or (d_pg like \'%...\nAll Nodes Vector: \n\n  node[0]=v_rmos_customer0001_node0002 (initiator) Up\n  node[1]=v_rmos_customer0001_node0001 (executor) Up\n  node[2]=v_rmos_customer0001_node0003 (executor) Up\n  node[3]=v_rmos_customer0001_node0004 (executor) Up\n  node[4]=v_rmos_customer0001_node0005 (executor) Up\n  node[5]=v_rmos_customer0001_node0006 (executor) Up\n  node[6]=v_rmos_customer0001_node0007 (executor) Up\n  node[7]=v_rmos_customer0001_node0008 (executor) Up\n  node[8]=v_rmos_customer0001_node0009 (executor) Up\n  node[9]=v_rmos_customer0001_node0010 (executor) Up\n", labelloc=t, labeljust=l ordering=out]
0[label = "Root \nOutBlk=[UncTuple(3)]", color = "green", shape = "house"];
1[label = "NewEENode \nOutBlk=[UncTuple(3)]", color = "green", shape = "box"];
2[label = "Recv\nRecv from: v_rmos_customer0001_node0002,v_rmos_customer0001_node0001,v_rmos_customer0001_node0003,v_rmos_customer0001_node0004,v_rmos_customer0001_node0005,v_rmos_customer0001_node0006,v_rmos_customer0001_node0007,v_rmos_customer0001_node0008,v_rmos_customer0001_node0009,v_rmos_customer0001_node0010\nNet id: 1002\n\nUnc: Integer(8)\nUnc: Varchar(512)\nUnc: Integer(8)", color = "green", shape = "box"];
3[label = "Send\nSend to: v_rmos_customer0001_node0002\nNet id: 1002\n\nUnc: Integer(8)\nUnc: Varchar(512)\nUnc: Integer(8)", color = "green", shape = "box"];
4[label = "ParallelUnionStep: \nCombine\nUnc: Integer(8)\nUnc: Varchar(512)\nUnc: Integer(8)", color = "green", shape = "box"];
5[label = "UserDefined (multi-phase):\nPartitionBy: a.campaign_id\nOrderBy:<NONE>\nAnalytical Functions:\n  public.FreqTransform(a.campaign_id, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\>, \<SVAR\> USING PARAMETERS colgroup=\'1103480,1103802,1103500,1103563,1104064,1103805,1103404,1103507,1103520,1103483,1104065,1103762,1103484,1103101,1103516,1103977,1104093\')\nUnc: Integer(8)\nUnc: Varchar(512)\nUnc: Integer(8)", color = "green", shape = "box"];
6[label = "GroupByHash(Sort Groups)(Spill): 1 keys\nAggs:\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
7[label = "ParallelUnionStep: \nLocally Resegment\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
8[label = "Recv\nRecv from: v_rmos_customer0001_node0002,v_rmos_customer0001_node0001,v_rmos_customer0001_node0003,v_rmos_customer0001_node0004,v_rmos_customer0001_node0005,v_rmos_customer0001_node0006,v_rmos_customer0001_node0007,v_rmos_customer0001_node0008,v_rmos_customer0001_node0009,v_rmos_customer0001_node0010\nNet id: 1001\n\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
9[label = "Send\nSend to: v_rmos_customer0001_node0002,v_rmos_customer0001_node0001,v_rmos_customer0001_node0003,v_rmos_customer0001_node0004,v_rmos_customer0001_node0005,v_rmos_customer0001_node0006,v_rmos_customer0001_node0007,v_rmos_customer0001_node0008,v_rmos_customer0001_node0009,v_rmos_customer0001_node0010\nNet id: 1001\nResegment\n\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
10[label = "ParallelUnionStep: \nCombine\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
11[label = "GroupByHash: 1 keys\nAggs:\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
12[label = "ParallelUnionStep: \nLocally Resegment\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
13[label = "GroupByPipe(HashPrepass): 1 keys\nAggs:\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\n  count(DISTINCT \<SVAR\>)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
14[label = "ExprEval: \n  a.campaign_id\n  CASE WHEN (a.d_pg ~~ \'%1103480%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103802%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103500%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103563%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104064%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103805%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103404%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103507%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103520%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103483%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104065%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103762%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103484%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103101%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103516%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103977%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104093%\') THEN a.rmid ELSE NULL::int END\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
15[label = "GroupByNarrowHash(Spill): 19 keys\n1 prefix keys\nAggs:\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
16[label = "ParallelUnionStep: \nLocally Resegment\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
17[label = "Recv\nRecv from: v_rmos_customer0001_node0002,v_rmos_customer0001_node0001,v_rmos_customer0001_node0003,v_rmos_customer0001_node0004,v_rmos_customer0001_node0005,v_rmos_customer0001_node0006,v_rmos_customer0001_node0007,v_rmos_customer0001_node0008,v_rmos_customer0001_node0009,v_rmos_customer0001_node0010\nNet id: 1000\n\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
18[label = "Send\nSend to: v_rmos_customer0001_node0002,v_rmos_customer0001_node0001,v_rmos_customer0001_node0003,v_rmos_customer0001_node0004,v_rmos_customer0001_node0005,v_rmos_customer0001_node0006,v_rmos_customer0001_node0007,v_rmos_customer0001_node0008,v_rmos_customer0001_node0009,v_rmos_customer0001_node0010\nNet id: 1000\nResegment\n\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
19[label = "ParallelUnionStep: \nCombine\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
20[label = "GroupByNarrowHash: 19 keys\n1 prefix keys\nAggs:\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
21[label = "ParallelUnionStep: \nLocally Resegment\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
22[label = "GroupGeneratorStep\nkeys: 18\nMDA gby prefix: 1\ngExprs: 1\nAggregates: \nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
23[label = "ExprEval: \n  a.campaign_id\n  CASE WHEN (a.d_pg ~~ \'%1103480%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103802%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103500%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103563%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104064%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103805%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103404%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103507%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103520%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103483%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104065%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103762%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103484%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103101%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103516%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103977%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104093%\') THEN a.rmid ELSE NULL::int END\n  1\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
24[label = "ExprEval: \n  a.campaign_id\n  CASE WHEN (a.d_pg ~~ \'%1103480%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103802%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103500%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103563%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104064%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103805%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103404%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103507%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103520%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103483%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104065%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103762%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103484%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103101%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103516%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1103977%\') THEN a.rmid ELSE NULL::int END\n  CASE WHEN (a.d_pg ~~ \'%1104093%\') THEN a.rmid ELSE NULL::int END\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
25[label = "ExprEval: \n  CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END\n  log_push.campaign_id\n  hash(log_push.rmid)\nUnc: Varchar(256)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
26[label = "Sort: (keys = A,A,A,N,N)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Varchar(256)\nUnc: Varchar(512)\nUnc: Varchar(80)", color = "green", shape = "box"];
27[label = "ExprEval: \n  log_push.campaign_id\n  hash(log_push.rmid)\n  CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END\n  log_push.dmp_tag\n  log_push.rmid", color = "green", shape = "box"];
28[label = "StorageUnionStep: log_push_super_20180815_b0\nRLE: Integer(8)\nUnc: Varchar(80)\nUnc: Varchar(512)", color = "purple", shape = "box"];
29[label = "ScanStep: log_push_super_20180815_b0\n(log_push.campaign_id = ANY (ARRAY[206910, 206911, 206912, 206913, 206914, 206915, 206916, 206917, 206918, 206919, 206920, 206921, 206922, 206934, 206935, 206936, 206937, 206938, 206939, 206940, 206941, 206942, 206943, 206944, 206945, 206946, 206947, 206948, 206949, 206950, 206951, 206952, 206953, 206954, 206955, 206956, 206957, 206958, 206959, 206960, 206961, 206962, 206963, 206964, 206965, 206966, 206967, 206968, 206969, 206970, 206971, 206972, 206973, 206974, 206975, 206976, 206977, 206927, 206928, 206982, 206990, 206984, 206978, 206989, 206979, 206987, 206986, 206983, 206988, 206985, 206980, 206981, 206995, 207003, 206997, 206991, 207002, 206992, 207000, 206999, 206996, 207001, 206998, 206993, 206994, 207008, 207016, 207010, 207004, 207015, 207005, 207013, 207012, 207009, 207014, 207011, 207006, 207007, 207020, 207021, 207032, 207033]))\n(log_push.valid = true)\n((log_push.pure_date \>= 20181201) AND (log_push.pure_date \<= 20181216))\n(log_push.p = 1)\n((CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103480%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103802%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103500%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103563%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1104064%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103805%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103404%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103507%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103520%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1103483%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1104065%\') OR (CASE WHEN (regexp_count(log_push.dmp_tag, \'(\"d_pg\")\', 1, \'\') \> 0) THEN coalesce((regexp_substr(log_push.dmp_tag, \'\"d_pg\":\"?([^\"}]*)\', 1, 1, \'\', 1))::varchar(256), \'\') ELSE NULL END ~~ \'%1...\ncampaign_id RLE\nvalid RLE (not emitted)\npure_date (not emitted)\nrmid\np (not emitted)\ndmp_tag\nRLE: Integer(8)\nUnc: Varchar(80)\nUnc: Varchar(512)", color = "brown", shape = "box"];
1->0 [label = "V[0] C=3",color = "black",style="bold", arrowtail="inv"];
2->1 [label = "0",color = "blue"];
3->2 [label = "0",color = "blue"];
4->3 [label = "0",color = "blue"];
5->4 [label = "0",color = "blue"];
6->5 [label = "0",color = "blue"];
7->6 [label = "0",color = "blue"];
8->7 [label = "0",color = "blue"];
9->8 [label = "0",color = "blue"];
10->9 [label = "0",color = "blue"];
11->10 [label = "0",color = "blue"];
12->11 [label = "0",color = "blue"];
13->12 [label = "0",color = "blue"];
14->13 [label = "0",color = "blue"];
15->14 [label = "0",color = "blue"];
16->15 [label = "0",color = "blue"];
17->16 [label = "0",color = "blue"];
18->17 [label = "0",color = "blue"];
19->18 [label = "0",color = "blue"];
20->19 [label = "0",color = "blue"];
21->20 [label = "0",color = "blue"];
22->21 [label = "0",color = "blue"];
23->22 [label = "0",color = "blue"];
24->23 [label = "0",color = "blue"];
25->24 [label = "0",color = "blue"];
26->25 [label = "0",color = "blue"];
27->26 [label = "0",color = "blue"];
28->27 [label = "0",color = "blue"];
29->28 [label = "0",color = "blue"];
}